/*
 * generated by Xtext 2.12.0
 */
package dk.sdu.scoping

import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EReference
import dk.sdu.wPage.WPagePackage.Literals
import org.eclipse.xtext.scoping.Scopes
import org.eclipse.xtext.EcoreUtil2
import dk.sdu.wPage.Name
import dk.sdu.wPage.Page
import dk.sdu.wPage.Variable
import dk.sdu.wPage.Contents

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
class WPageScopeProvider extends AbstractWPageScopeProvider {

	override getScope(EObject context, EReference reference) {
		if (context instanceof Name && reference == Literals.NAME__VALUE) {
			val pageContainer = EcoreUtil2.getContainerOfType(context, Page)
			val elements = EcoreUtil2.getAllContentsOfType(pageContainer, Variable)
			
			val contentsContainer = EcoreUtil2.getContainerOfType(context, Contents)
			elements.addAll(EcoreUtil2.getAllContentsOfType(contentsContainer, Variable).filter[it.eContainer.equals(contentsContainer)])
			
			return Scopes.scopeFor(elements)
		}
		
		super.getScope(context, reference)
	}

}
